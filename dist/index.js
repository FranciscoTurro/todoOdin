(()=>{"use strict";const e=e=>{1==t[e].checked?t[e].checked=!1:t[e].checked=!0},t=[],n=document.querySelector(".newTodo"),d=document.getElementById("description"),c=document.getElementById("date"),o=document.getElementById("project"),a=document.getElementById("content"),i=document.getElementById("sidebar"),l=document.getElementById("datalist"),s=document.querySelector(".allTodo");document.getElementById("debug").addEventListener("click",(()=>{t.forEach((e=>{console.log(e)}))})),n.addEventListener("click",(()=>{a.innerHTML="",t.push(((e,t,n,d)=>({description:e,dueDate:t,checked:n,project:d}))(d.value,c.value,!1,o.value)),r(),p(o.value),m(),description.value="",c.value="",o.value=""})),s.addEventListener("click",(()=>{a.innerHTML="",r()}));const r=()=>{for(let n=0;n<t.length;n++){const d=document.createElement("div");d.classList.add("todoDiv");const c=document.createElement("input");c.setAttribute("type","checkbox"),c.classList.add(n);const o=document.createElement("div");o.textContent=t[n].description;const i=document.createElement("div");i.textContent=t[n].dueDate,1==t[n].checked&&(d.classList.add("checked"),c.checked=!0),d.appendChild(c),d.appendChild(o),d.appendChild(i),a.appendChild(d),c.addEventListener("click",(t=>{e(parseInt(t.target.classList)),t.target.parentNode.classList.toggle("checked")}))}},u=[],p=e=>{if(""!=e&&!u.find((t=>t===e))){u.push(e);const t=document.createElement("button");t.classList.add("projBtn"),t.textContent=e,i.appendChild(t),t.addEventListener("click",(()=>{a.innerHTML="",h(t.textContent)}))}},m=()=>{l.innerHTML="",u.forEach((function(e){var t=document.createElement("option");t.value=e,l.appendChild(t)}))},h=e=>{t.forEach((t=>{t.project==e&&E(t)}))},E=t=>{const n=document.createElement("div");n.classList.add("todoDiv");const d=document.createElement("input");d.setAttribute("type","checkbox");const c=document.createElement("div");c.textContent=t.description;const o=document.createElement("div");o.textContent=t.dueDate,1==t.checked&&(n.classList.add("checked"),d.checked=!0),n.appendChild(d),n.appendChild(c),n.appendChild(o),a.appendChild(n),d.addEventListener("click",(t=>{e(parseInt(t.target.classList)),t.target.parentNode.classList.toggle("checked")}))},v=document.getElementById("modalContainer");document.querySelector(".modalButton").addEventListener("click",(()=>{v.style.display="block"})),window.addEventListener("click",(e=>{e.target==v&&(v.style.display="none")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,